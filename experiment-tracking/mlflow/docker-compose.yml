version: '3.7'

services:
  minio:
    container_name: minio
    hostname: minio
    image: minio/minio:latest
    command: server --console-address ":9001" var/minio/data/
    expose:
      - "9000"
      - "9001"
    networks:
      - minio-network
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    volumes:
      - minio-data:/var/minio/data/

  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    entrypoint: ['/bin/sh', '-c']
    command:
      - |
        mc alias set minio http://minio:9000 "${MINIO_ROOT_USER}" "${MINIO_ROOT_PASSWORD}"
        mc admin user add minio "${S3_ACCESS_KEY_ID}" "${S3_SECRET_ACCESS_KEY}"
        mc admin policy attach minio readwrite --user "${S3_ACCESS_KEY_ID}"
        mc mb --ignore-existing minio/"${S3_BUCKET_NAME}"
    networks:
      - minio-network
    depends_on:
      - minio

  nginx:
    image: nginx:1.19.2-alpine
    container_name: nginx
    hostname: nginx
    volumes:
      - ./var/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./var/nginx/.htpasswd:/usr/local/etc/nginx/.htpasswd:ro
    ports:
      - "9000:9000"
      - "9001:9001"
      - "5000:5000"
    networks:
      - minio-network
    depends_on:
      - minio

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - postgres-data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres-network

  mlflow:
    build: ./Dockerfile
    container_name: mlflow_server
    image: mflow_server
    restart: always
    expose:
      - "5000"
    networks:
      - minio-network
      - postgres-network
    environment:
      AWS_ACCESS_KEY_ID: "${S3_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${S3_SECRET_ACCESS_KEY}"
      MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
    depends_on:
      - minio
      - postgres
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB} --default-artifact-root s3://"${S3_BUCKET_NAME}" --host 0.0.0.0

volumes:
  minio-data:
    external: false
  postgres-data:
    external: false

networks:
  minio-network:
    driver: bridge
  postgres-network:
    driver: bridge
